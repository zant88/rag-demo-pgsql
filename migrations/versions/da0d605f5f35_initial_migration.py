"""Initial migration

Revision ID: da0d605f5f35
Revises: 
Create Date: 2025-07-28 22:32:50.899205

"""
import pgvector
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da0d605f5f35'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('upload_status', sa.String(), nullable=True),
    sa.Column('processing_status', sa.JSON(), nullable=True),
    sa.Column('chunk_count', sa.Integer(), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=True),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_filename'), 'documents', ['filename'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('knowledge_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('categories', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('chunk_count', sa.Integer(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_entries_id'), 'knowledge_entries', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_entries_title'), 'knowledge_entries', ['title'], unique=False)
    op.create_table('chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_cleaned', sa.Text(), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=1536), nullable=True),
    sa.Column('metadata_json', sa.JSON(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('char_count', sa.Integer(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chunks_embedding', 'chunks', ['embedding'], unique=False, postgresql_using='ivfflat')
    op.create_index(op.f('ix_chunks_id'), 'chunks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chunks_id'), table_name='chunks')
    op.drop_index('idx_chunks_embedding', table_name='chunks', postgresql_using='ivfflat')
    op.drop_table('chunks')
    op.drop_index(op.f('ix_knowledge_entries_title'), table_name='knowledge_entries')
    op.drop_index(op.f('ix_knowledge_entries_id'), table_name='knowledge_entries')
    op.drop_table('knowledge_entries')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_filename'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
